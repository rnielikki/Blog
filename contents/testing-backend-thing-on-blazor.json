{"Title":"Testing Backend thing on Blazor","Content":"# File I/O\n\n![Image Alt](contents/files/blazor-backend/1.png)\n\n![Image Alt](contents/files/blazor-backend/2.png)\n\nThis one results “/” (Always, I tested on ‘/counter’ page too).\n\nI checked storages on browser tool, but nothing was found. Looks like it uses virtual storage on memory – It was emptied every time when the program starts.\n\n# Creating threads\n\nJavaScript doesn’t support multithreading. WebAssembly may support, but not on the browser. So it’s maybe fun to test.\nAnd guess what, multithreading is blocked.\n\n```csharp\nvar t1 = new System.Threading.Thread(new System.Threading.ThreadStart(()=>Console.WriteLine(\"first\")));\nvar t2 = new System.Threading.Thread(new System.Threading.ThreadStart(()=>Console.WriteLine(\"second\")));\nt1.Start();\nt2.Start();\n```\n![Image Alt](contents/files/blazor-backend/3.png)\n\n# IRCBot\nIt will be interesting if my old IRCBot works on Blazor. But it needs to open socket. So, does it work?\n\n![Image Alt](contents/files/blazor-backend/4.png)\n\n[TCP Socket opening](https://developer.mozilla.org/en-US/docs/Archive/B2G_OS/API/TCPSocket) is not supported. Even MDN says it works only certain states. The raw TCP socket support has security problem, so W3C [marked it as retired](https://www.w3.org/TR/2015/NOTE-tcp-udp-sockets-20150723/). It’s highly reasonable not to support it.\n\n# Conclusion\nSome features should not work on the front-end side (and cannot work), and Blazor did well with this. I mean, maybe WebAssembly did well and Blazor is just implemented version of WebAssembly. (Really, [WebAssembly is more secure](https://webassembly.org/docs/security/) than native C or C++)\n","CreationDate":"2020-06-05T14:42:58.2976985+03:00","ModificationDate":"2020-06-05T14:42:58.2976985+03:00","Tags":["Blazor"]}